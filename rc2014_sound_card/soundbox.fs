DECIMAL 16 BASE C!

D0 CONSTANT DATPORT
D8 CONSTANT REGPORT

CREATE REGISTERS
01 C, 08 C, 00 C, 08 C,
02 C, 10 C, 02 C, 09 C,
04 C, 20 C, 04 C, 0A C,

0 VARIABLE SPOINTER
0 VARIABLE SREG

:  SIN ( R -- V )
    ( READ VALUE FROM SOUND-CARD REGISTER )
    REGPORT OUT
    REGPORT IN
;
    
: SOUT ( R V -- )
    ( WRITE VALUE TO SOUND-CARD REGISTER )
    SWAP
    REGPORT OUT
    DATPORT OUT
;

: CHA ( -- )
    ( SELECT CHANNEL A )
    REGISTERS
    SPOINTER !
;

: CHB ( -- )
    ( SELECT CHANNEL B )
    REGISTERS 4 +
    SPOINTER !
;

: CHC ( -- )
    ( SELECT CHANNEL C )
    REGISTERS 8 +
    SPOINTER !
;

: CHE ( -- )
    ( SET SPOINTER TO ACCESS ENVELOPE FREQUENCY DATA )
    B SREG ! ( REGISTER HOLDS ENVELOPE FREQUENCY )
    SREG 2 - SPOINTER ! ( POINT TO TWO BYTES BEFORE SREG )
                        ( SO 'PERIOD' WORKS )
;

: TOGGLE ( MASK FLAG -- )
    ( READ CURRENT MIXER SETTING )
    7 REGPORT OUT
    REGPORT IN

    ( FLAG INDICATES WHETHER TO SET OR RESET BITS )
    SWAP IF
	AND
    ELSE
	OR
    THEN

    ( WRITE NEW MIXER SETTING )
    7 REGPORT OUT
    DATPORT OUT
;

: TONEON ( -- )
    SPOINTER @ C@ ( RETRIEVE CORRESPONDING MIXER BIT )
    FF XOR ( INVERT ; 0 = ENABLE )
    1 TOGGLE
;

: TONEOFF ( -- )
    SPOINTER @ C@ ( RETRIEVE CORRESPONDING MIXER BIT )
    0 TOGGLE ( 1 = DISABLE )
;

: NOISEON ( -- )
    SPOINTER @ 1+ C@ ( RETRIEVE CORRESPONDING MIXER BIT )
    FF XOR ( INVERT ; 0 = ENABLE )
    1 TOGGLE
;

: NOISEOFF ( -- )
    SPOINTER @ 1+ C@ ( RETRIEVE CORRESPONDING MIXER BIT )
    0 TOGGLE ( 1 = DISABLE )
;

: VOLUME ( VOL -- )
    SPOINTER @ 3 + C@ ( RETRIEVE CORRESPONDING AMPLITUDE REG )
    SWAP SOUT ( UPDATE )
;

: ENV
    ( SWITCH CHANNEL TO USE ENVELOPE GENERATOR )
    10 VOLUME ( #10 MEANS USE ENVELOPE CONTROL )
;

: ENVSHAPE ( N -- )
    ( SET ENVELOPE SHAPE )
    D SWAP SOUT
;

: PAUSE ( N -- )
    0 DO
    LOOP
;

: SOUNDOFF ( -- )
    ( MUTE ALL CHANNELS )
    3F 0 TOGGLE ( MASK = %00111111 )
    0 CHA VOLUME
    0 CHB VOLUME
    0 CHC VOLUME
;

: PERIOD ( VALUE -- )
    ( WRITE TONE VALUE FOR CURRENT CHANNEL )
    SPOINTER @ 2+ C@
    SREG !
    DUP FF AND ( ISOLATE LOW BYTE )
    SWAP 100 / ( ISOLATE HIGH BYTE )

    ( .S : VAL_L VAL_H )
    SREG @
    ROT ROT ( .S : REG VAL_L VAL_H )
    SREG @ 1+
    SWAP ( .S : REG VAL_L REG+1 VAL_H )
    SOUT
    SOUT
;
    
: NOISE ( N -- )
    6 SWAP OUT
;

: FREQ ( FF -- )
    ( SET TONE OF CURRENT CHANNEL TO FREQ )
    OVER OVER INT ( DUP FREQUENCY AND CONVERT TO INT )

    0< IF
	FNEGATE 12695.3
    ELSE
	203125.
    THEN

    4 ROLL 4 ROLL ( SWAP FLOATS )
    F/ ( FF / FACTOR )
    INT
    PERIOD ( WRITE TO SOUND CARD )
;

: TRIMPHONE ( -- )
    SOUNDOFF
    3F CHA PERIOD
    CHA TONEON
    127 CHE PERIOD
    CHA ENV
    A ENVSHAPE

    1D4C PAUSE

    BEGIN
	0 CHA VOLUME
	1D4C PAUSE
	CHA ENV
	BB8 PAUSE
	0 CHA VOLUME
	5DC PAUSE
	CHA ENV
	125C PAUSE
	INKEY
    UNTIL

    0 CHA VOLUME
;

: TRAIN ( -- )
    SOUNDOFF
    0 NOISE
    CHC NOISEON
    7 CHC VOLUME
    CHA NOISEON
    CHA ENV
    -0.2 CHE FREQ
    0 ENVSHAPE
    1388 PAUSE
    8 ENVSHAPE

    15 1 DO
	I UFLOAT
	3. F/ FNEGATE
	CHE FREQ
	5208 PAUSE
    LOOP

    A CHB VOLUME
    500. CHB FREQ
    CHB TONEON ( ** )
    FA0 PAUSE
    CHB TONEOFF
    5DC PAUSE
    CHB TONEON
    1B58 PAUSE
    CHB TONEOFF
;

: SWEEP ( SPEED STEP END START -- )
    CHA TONEON

    DO
	I CHA PERIOD
	OVER 0 DO
	LOOP
	DUP
    +LOOP

    DROP DROP
;

: WOLF ( -- )
    SOUNDOFF

    15 CHA VOLUME
    20 -1 58 116 SWEEP
    CHA TONEOFF

    900 0 DO
    LOOP

    40 -1 88 116 SWEEP
    4 2 180 88 SWEEP

    CHA TONEOFF
;

: ALL ( -- )
    CLS ." WOLF WHISTLE"
    WOLF
    
    CLS ." TRAIN"
    TRAIN
    
    CLS ." TRIMPHONE"
    TRIMPHONE
;

DECIMAL
